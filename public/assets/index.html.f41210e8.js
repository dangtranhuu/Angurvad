import{_ as n,o as s,c as a,b as t}from"./app.dc9b24b0.js";const p={},o=t(`<p>C\xF9ng m\xECnh t\xECm hi\u1EC3u v\u1EC1 v\xF2ng l\u1EB7p <strong>for, forEach, while v\xE0 do while</strong> trong Java nha ^^</p><h1 id="vong-lap" tabindex="-1"><a class="header-anchor" href="#vong-lap" aria-hidden="true">#</a> V\xF2ng l\u1EB7p</h1><p>C\u0169ng nh\u01B0 b\xE0i\xA0<a href="">\u0110i\u1EC1u ki\u1EC7n</a>, th\xEC \u0111\xE2y l\xE0 m\u1ED9t v\u1EA5n \u0111\u1EC1 c\xF3 trong m\u1ECDi ng\xF4n ng\u1EEF l\u1EADp tr\xECnh.</p><p><em>V\u1EADy v\xF2ng l\u1EB7p l\xE0 g\xEC?</em></p><blockquote><p><strong>V\xF2ng l\u1EB7p l\xE0 c\u1EA5u tr\xFAc l\u1EB7p \u0111i l\u1EB7p l\u1EA1i m\u1ED9t bi\u1EC3u th\u1EE9c n\xE0o \u0111\xF3 \u0111\u1EBFn khi n\xE0o \u0111i\u1EC1u ki\u1EC7n d\u1EEBng l\xE0 sai</strong></p><p><strong>V\xF2ng l\u1EB7p d\xF9ng \u0111\u1EC3 l\xE0m m\u1ED9t v\u1EA5n \u0111\u1EC1 g\xEC \u0111\xF3 l\u1EB7p \u0111i l\u1EB7p l\u1EA1i</strong></p></blockquote><p>C\xF3 c\xE1c ki\u1EC3u v\xF2ng l\u1EB7p sau :</p><ul><li><strong>while</strong></li><li><strong>do..while</strong></li><li><strong>for</strong></li><li><strong>for..Each</strong></li></ul><hr><h2 id="_1-vong-lap-while" tabindex="-1"><a class="header-anchor" href="#_1-vong-lap-while" aria-hidden="true">#</a> 1. V\xF2ng l\u1EB7p <strong>while</strong></h2><p>Nh\u01B0 m\u1ECDi ng\xF4n ng\u1EEF \u0111\xE2y l\xE0 v\xF2ng l\u1EB7p l\u1EA1i l\u1EB7p l\u1EA1i mi\u1EC5n \u0111i\u1EC1u ki\u1EC7n l\xE0 <strong>true</strong>, s\u1EBD tho\xE1t khi \u0111i\u1EC1u ki\u1EC7n l\xE0 <strong>false</strong></p><p><strong>V\xED d\u1EE5</strong> :</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	i<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">//c\xF3 n\xE0y \u0111\u1EC3 d\u1EA7n d\u1EABn cho \u0111i\u1EC1u ki\u1EC7n th\xE0nh false</span>
<span class="token punctuation">}</span>
<span class="token comment">// output : 0 1 2 3</span>
</code></pre></div><hr><h2 id="_2-vong-lap-do-while" tabindex="-1"><a class="header-anchor" href="#_2-vong-lap-do-while" aria-hidden="true">#</a> 2. V\xF2ng l\u1EB7p <strong>do..while</strong></h2><p>\u0110\xE2y l\xE0 m\u1ED9t bi\u1EBFn th\u1EC3 c\u1EE7a v\xF2ng l\u1EB7p <strong>while</strong>, s\u1EBD th\u1EF1c hi\u1EC7n tr\u01B0\u1EDBc m\u1ED9t l\u1EA7n v\u1EDBi l\u1EC7nh <strong>do</strong> v\xE0 sau \u0111\xF3 ki\u1EC3m tra \u0111i\u1EC1u ki\u1EC7n.</p><p><strong>V\xED d\u1EE5</strong>:</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token keyword">do</span><span class="token punctuation">{</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// output : 0</span>
</code></pre></div><hr><h2 id="_3-vong-lap-for" tabindex="-1"><a class="header-anchor" href="#_3-vong-lap-for" aria-hidden="true">#</a> 3. V\xF2ng l\u1EB7p <strong>for</strong></h2><p>N\xF3 l\xE0 m\u1ED9t d\u1EA1ng v\xF2ng l\u1EB7p ng\u1EAFn g\u1ECDn nh\u1EA5t,bao g\u1ED3m 3 ph\u1EA7n ch\xEDnh :</p><ul><li><strong>Initaliztion</strong> : <em>kh\u1EDFi t\u1EA1o v\xF2ng l\u1EB7p</em></li><li><strong>Test Statement</strong> : <em>\u0111i\u1EC1u ki\u1EC7n ki\u1EC3m tra</em></li><li><strong>Iteration Statement</strong> : <em>b\u01B0\u1EDBc nh\u1EA3y c\u1EE7a v\xF2ng l\u1EB7p</em></li></ul><p><strong>V\xED d\u1EE5</strong> :</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> myArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// output : 4 5 7 2</span>
</code></pre></div><hr><h2 id="_4-vong-lap-for-each" tabindex="-1"><a class="header-anchor" href="#_4-vong-lap-for-each" aria-hidden="true">#</a> 4. V\xF2ng l\u1EB7p <strong>for..Each</strong></h2><p>\u0110\u01B0\u1EE3c s\u1EED d\u1EE5ng ri\xEAng \u0111\u1EC3 l\u1EB7p ra c\xE1c ph\u1EA7n t\u1EED trong 1 <strong>Array</strong>, (<em>c\xF3 th\u1EC3 d\xF9ng <strong>for</strong> nh\u01B0 b\xECnh th\u01B0\u1EDDng</em>)</p><p><strong>V\xED d\u1EE5</strong> :</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> myArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> index <span class="token operator">:</span> myArray<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// output : 5 3 2 6</span>
</code></pre></div><hr><h2 id="_5-\u0111ieu-khien-vong-lap" tabindex="-1"><a class="header-anchor" href="#_5-\u0111ieu-khien-vong-lap" aria-hidden="true">#</a> 5. \u0110i\u1EC1u khi\u1EC3n v\xF2ng l\u1EB7p</h2><p>V\u1EADy ta t\u1EF1 h\u1ECFi th\u1EBF n\xE0y :</p><blockquote><p>\u{1F914}\xA0N\u1EBFu trong m\u1ED9t\xA0<strong>array</strong>\xA0c\xF3\xA0<strong>10</strong>\xA0ph\u1EA7n t\u1EED, ta\xA0<strong>for</strong>\xA0t\u1EEB\xA0<strong>0 t\u1EDBi 10</strong>, v\xE0 ta mu\u1ED1n n\xF3 d\u1EEBng t\u1EA1i 5 th\xEC th\u1EBF n\xE0o ?</p></blockquote><p>\u0110\u01A1n gi\u1EA3n l\xE0 ta c\xF3 th\u1EC3 d\xF9ng\xA0<strong>break</strong>\xA0\u0111\u1EC3 tho\xE1t kh\u1ECFi v\xF2ng l\u1EB7p :</p><h3 id="lenh-break-\u0111e-thoat-vong-lap" tabindex="-1"><a class="header-anchor" href="#lenh-break-\u0111e-thoat-vong-lap" aria-hidden="true">#</a> L\u1EC7nh <strong>break</strong> \u0111\u1EC3 tho\xE1t v\xF2ng l\u1EB7p</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//output : 5 3</span>
</code></pre></div><blockquote><p>\u{1F914}\xA0N\u1EBFu trong m\u1ED9t\xA0<strong>array</strong>\xA0c\xF3\xA0<strong>10</strong>\xA0ph\u1EA7n t\u1EED, ta\xA0<strong>for</strong>\xA0t\u1EEB\xA0<strong>0 t\u1EDBi 10</strong>, v\xE0 mu\u1ED1n t\u1EDBi 5 th\xEC b\u1ECF qua n\xF3 th\xEC th\u1EC3 n\xE0o ?</p></blockquote><p>\u0110\u01A1n gi\u1EA3n l\xE0 ta c\xF3 th\u1EC3 d\xF9ng\xA0<strong>continue</strong>\xA0\u0111\u1EC3 b\u1ECF qua tr\u01B0\u1EDDng h\u1EE3p \u0111\xF3 :</p><h3 id="lenh-continue-\u0111e-thoat-thuc-hien-lan-lap-tiep" tabindex="-1"><a class="header-anchor" href="#lenh-continue-\u0111e-thoat-thuc-hien-lan-lap-tiep" aria-hidden="true">#</a> L\u1EC7nh <strong>continue</strong> \u0111\u1EC3 tho\xE1t th\u1EF1c hi\u1EC7n l\u1EA7n l\u1EB7p ti\u1EBFp</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//output : 5 3 6</span>
</code></pre></div><h2 id="_6-gan-nhan-vong-lap" tabindex="-1"><a class="header-anchor" href="#_6-gan-nhan-vong-lap" aria-hidden="true">#</a> 6. G\u1EAFn nh\xE3n v\xF2ng l\u1EB7p</h2><p>Ta s\u1EBD \u0111\xFAng t\u1EDBi\xA0<strong>Label</strong>\xA0\u0111\u1EC3 \u0111i\u1EC1u khi\u1EC3n v\xF2ng l\u1EB7p m\u1ED9t c\xE1ch t\u1ED1t nh\u1EA5t :</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
loop<span class="token operator">:</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i in array<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">continue</span> loop<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//output : 5 3 6</span>
</code></pre></div><blockquote><p>\u{1F680} T\u1EE9c l\xE0 n\xF3 s\u1EBD \u0111\xE1nh d\u1EA5u v\xF2ng l\u1EB7p \u0111\xF3 l\xE0 <strong>loop</strong>, c\xF2n b\u1EA1n d\xF9ng <strong>continue</strong> v\xE0 <strong>break</strong> l\xEAn ch\xEDnh v\xF2ng l\u1EB7p \u0111\xF3.</p></blockquote><h2 id="_7-bai-tap" tabindex="-1"><a class="header-anchor" href="#_7-bai-tap" aria-hidden="true">#</a> 7. B\xE0i t\u1EADp</h2><h3 id="_7-1-tim-boi-chung-nho-nhat-java-bang-vong-lap-while" tabindex="-1"><a class="header-anchor" href="#_7-1-tim-boi-chung-nho-nhat-java-bang-vong-lap-while" aria-hidden="true">#</a> 7.1 T\xECm b\u1ED9i chung nh\u1ECF nh\u1EA5t Java b\u1EB1ng v\xF2ng l\u1EB7p while</h3><p>B\u01B0\u1EDBc 1: S\u1EED d\u1EE5ng class Scanner \u0111\u1EC3 nh\u1EADn d\u1EEF li\u1EC7u t\u1EEB b\xE0n ph\xEDm, h\xE3y import th\u01B0 vi\u1EC7n nh\xE9: B\u01B0\u1EDBc 1: S\u1EED d\u1EE5ng class Scanner \u0111\u1EC3 nh\u1EADn d\u1EEF li\u1EC7u t\u1EEB b\xE0n ph\xEDm, h\xE3y import th\u01B0 vi\u1EC7n nh\xE9: B\u01B0\u1EDBc 1: S\u1EED d\u1EE5ng class Scanner \u0111\u1EC3 nh\u1EADn d\u1EEF li\u1EC7u t\u1EEB b\xE0n ph\xEDm, h\xE3y import th\u01B0 vi\u1EC7n nh\xE9: B\u01B0\u1EDBc 4: S\u1EED d\u1EE5ng v\xF2ng l\u1EB7p while v\u1EDBi \u0111i\u1EC1u ki\u1EC3n True \u0111\u1EC3 l\u1EB7p cho \u0111\u1EBFn khi t\xECm th\u1EA5y gi\xE1 tr\u1ECB BCNN. B\xEAn trong v\xF2ng l\u1EB7p while s\u1EBD l\xE0 \u0111i\u1EC1u ki\u1EC7n c\u1EE7a BCNN: lcm % n1 == 0 &amp;&amp; lcm % n2 == 0.</p><p>S\u1ED1 b\u1EAFt \u0111\u1EA7u ki\u1EC3m tra s\u1EBD l\xE0 s\u1ED1 l\u1EDBn nh\u1EA5t trong hai s\u1ED1 a v\xE0 b. Sau khi ki\u1EC3m tra n\u1EBFu kh\xF4ng th\u1ECFa m\xE3n v\u1EDBi \u0111i\u1EC1u ki\u1EC7n th\xEC t\u0103ng lcm l\xEAn 1 r\u1ED3i ti\u1EBFp t\u1EE5c ki\u1EC3m tra.</p><details class="custom-container details"><summary>B\xE0i gi\u1EA3i</summary><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//s\u1EED d\u1EE5ng class Scanner \u0111\u1EC3 l\u1EA5y d\u1EEF li\u1EC7u t\u1EEB b\xE0n ph\xEDm</span>
    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//khai b\xE1o n1, n2 l\xE0 hai s\u1ED1 c\u1EA7n t\xEDnh b\u1ED9i chung nh\u1ECF nh\u1EA5t</span>
    <span class="token comment">//lcm l\xE0 b\u1ED9i chung nh\u1ECF nh\u1EA5t c\u1EE7a a v\xE0 b</span>
    <span class="token keyword">int</span> n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> lcm<span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n\\nNh\u1EADp v\xE0o s\u1ED1 th\u1EE9 nh\u1EA5t: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    n1 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nh\u1EADp v\xE0o s\u1ED1 th\u1EE9 hai: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    n2 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//s\u1EED d\u1EE5ng to\xE1n t\u1EED ba ng\xF4i \u0111\u1EC3 g\xE1n gi\xE1 tr\u1ECB l\u1EDBn nh\u1EA5t gi\u1EEFa a v\xE0 b cho lcm</span>
    <span class="token comment">//-&gt;&gt; v\xEC bcnn c\u1EE7a a v\xE0 b lu\xF4n lu\xF4n l\u1EDBn h\u01A1n a v\xE0 b</span>
    lcm <span class="token operator">=</span> <span class="token punctuation">(</span>n1 <span class="token operator">&gt;</span> n2<span class="token punctuation">)</span> <span class="token operator">?</span> n1 <span class="token operator">:</span> n2<span class="token punctuation">;</span>
    <span class="token comment">//s\u1EED d\u1EE5ng v\xF2ng l\u1EB7p while v\u1EDBi \u0111i\u1EC1u ki\u1EC7n true \u0111\u1EC3 l\u1EB7p \u0111\u1EBFn khi n\xE0o g\u1EB7p l\u1EC7nh break;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//n\u1EBFu lcm chia h\u1EBFt cho n1 v\xE0 n2, t\u1EE9c l\xE0 lcm ch\xEDnh l\xE0 bcnn c\u1EE7a a v\xE0 b</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span> lcm <span class="token operator">%</span> n1 <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> lcm <span class="token operator">%</span> n2 <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;B\u1ED9i chung nh\u1ECF nh\u1EA5t c\u1EE7a %d v\xE0 %d l\xE0 %d.&quot;</span><span class="token punctuation">,</span> n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> lcm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">//lcm b\u1EAFt \u0111\u1EA7u t\u1EEB gi\xE1 tr\u1ECB l\u1EDBn nh\u1EA5t gi\u1EEFa a v\xE0 b, n\u1EBFu kh\xF4ng ph\u1EA3i l\xE0 bcnn th\xEC t\u0103ng l\xEAn 1 r\u1ED3i ti\u1EBFp t\u1EE5c ki\u1EC3m tra, c\u1EE9 nh\u01B0 v\u1EADy cho \u0111\u1EBFn khi t\xECm \u0111\u01B0\u1EE3c</span>
      <span class="token operator">++</span>lcm<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
K\u1EBFt qu\u1EA3:
	Nh\u1EADp s\u1ED1 th\u1EE9 nh\u1EA5t: 6
	Nh\u1EADp s\u1ED1 th\u1EE9 hai: 12
	B\u1ED9i chung nh\u1ECF nh\u1EA5t c\u1EE7a 6 v\xE0 12 l\xE0 12
*/</span>
</code></pre></div></details><h3 id="_7-2-\u0111ao-nguoc-mot-so-nguyen-n" tabindex="-1"><a class="header-anchor" href="#_7-2-\u0111ao-nguoc-mot-so-nguyen-n" aria-hidden="true">#</a> 7.2 \u0110\u1EA3o ng\u01B0\u1EE3c m\u1ED9t s\u1ED1 nguy\xEAn N</h3><p>Gi\u1EA3 s\u1EED ch\xFAng ta c\xF3 reversed = 0 v\xE0 num1 = 1234 l\xE0 s\u1ED1 c\u1EA7n \u0111\u1EA3o ng\u01B0\u1EE3c. B\xE2y gi\u1EDD m\xECnh s\u1EBD ch\u1EA1y v\xF2ng l\u1EB7p while n\xE0y t\u1EEBng b\u01B0\u1EDBc cho c\xE1c b\u1EA1n th\u1EA5y c\xE1ch th\u1EE9c thu\u1EADt to\xE1n n\xE0y ho\u1EA1t \u0111\u1ED9ng nh\xE9.</p><p>B\u01B0\u1EDBc 1: Th\u1EF1c hi\u1EC7n v\xF2ng l\u1EB7p l\u1EA7n 1, num1 = 1234, reversed = 0.</p><p>Ki\u1EC3m tra \u0111i\u1EC1u ki\u1EC7n v\xF2ng l\u1EB7p num1 != 0, n\xEAn ch\xFAng ta s\u1EBD th\u1EF1c hi\u1EC7n c\xE1c c\xE2u l\u1EC7nh b\xEAn trong v\xF2ng l\u1EB7p.</p><p>digit = num1 % 10 = 1234 % 10 = 4, nh\u01B0 v\u1EADy digit = 4. reversed = reversed * 10 + digit = 0 * 10 + 4 = 4, nh\u01B0 v\u1EADy reversed = 4. num1 = num1 / 10 = 1234 / 10 = 123, nh\u01B0 v\u1EADy num1 = 123. K\u1EBFt th\xFAc v\xF2ng l\u1EB7p l\u1EA7n 1 ta c\xF3: reversed = 4, num1 = 123. Bi\u1EBFn digit ch\u1EC9 l\xE0 bi\u1EBFn trung gian v\u1EADy n\xEAn ch\xFAng ta kh\xF4ng c\u1EA7n quan t\xE2m \u0111\u1EBFn n\xF3.</p><p>B\u01B0\u1EDBc 2: Th\u1EF1c hi\u1EC7n v\xF2ng l\u1EB7p l\u1EA7n 2, num1 = 123, reversed = 4.</p><p>T\u01B0\u01A1ng t\u1EF1 nh\u01B0 v\xF2ng l\u1EB7p th\u1EE9 nh\u1EA5t, sau khi k\u1EBFt th\xFAc v\xF2ng l\u1EB7p l\u1EA7n hai ta \u0111\u01B0\u1EE3c k\u1EBFt qu\u1EA3: num1 = 12, reversed = 43.</p><p>B\u01B0\u1EDBc 3: Th\u1EF1c hi\u1EC7n v\xF2ng l\u1EB7p l\u1EA7n 3, num1 =12, reversed = 43. Sau khi v\xF2ng l\u1EB7p k\u1EBFt th\xFAc ra \u0111\u01B0\u1EE3c: num1 = 1, reversed = 432. B\u01B0\u1EDBc 4: Th\u1EF1c hi\u1EC7n v\xF2ng l\u1EB7p l\u1EA7n 4, num1 = 1, reversed = 432. K\u1EBFt th\xFAc v\xF2ng l\u1EB7p ta \u0111\u01B0\u1EE3c k\u1EBFt qu\u1EA3: num1 = 0, reversed = 4321.</p><p>\u0110\u1EBFn \u0111\xE2y, num1 = 0 kh\xF4ng th\u1ECFa m\xE3n \u0111i\u1EC1u ki\u1EC7n v\xF2ng l\u1EB7p while n\xEAn k\u1EBFt th\xFAc v\xF2ng l\u1EB7p. Ta \u0111\u01B0\u1EE3c k\u1EBFt qu\u1EA3 cu\u1ED1i c\xF9ng l\xE0 reversed = 4321 l\xE0 s\u1ED1 \u0111\u1EA3o ng\u01B0\u1EE3c c\u1EE7a num1 = 1234.</p><details class="custom-container details"><summary>B\xE0i gi\u1EA3i</summary><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//s\u1EED d\u1EE5ng class Scanner \u0111\u1EC3 l\u1EA5y d\u1EEF li\u1EC7u t\u1EEB b\xE0n ph\xEDm</span>
    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//khai b\xE1o bi\u1EBFn num1 l\xE0 s\u1ED1 c\u1EA7n \u0111\u1EA3o ng\u01B0\u1EE3c, reversed l\xE0 s\u1ED1 sau khi \u0111\u1EA3o ng\u01B0\u1EE3c</span>
    <span class="token keyword">int</span> num1<span class="token punctuation">,</span>num2<span class="token punctuation">,</span> reversed <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n\\nNh\u1EADp v\xE0o s\u1ED1 c\u1EA7n \u0111\u1EA3o ng\u01B0\u1EE3c: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    num1 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//s\u1EDF d\u0129 m\xECnh g\xE1n num1 cho num2 ch\u1EC9 \u0111\u1EC3 hi\u1EC3n th\u1ECB ra m\xE0n h\xECnh</span>
    num2 <span class="token operator">=</span> num1<span class="token punctuation">;</span>
    <span class="token comment">//s\u1EED d\u1EE5ng v\xF2ng l\u1EB7p while \u0111\u1EC3 \u0111\u1EA3o ng\u01B0\u1EE3c num1</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>num1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> digit <span class="token operator">=</span> num1 <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
      reversed <span class="token operator">=</span> reversed <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> digit<span class="token punctuation">;</span>
      num1 <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//hi\u1EC3n th\u1ECB s\u1ED1 sau khi \u0111\u1EA3o ng\u01B0\u1EE3c ra m\xE0n h\xECnh</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;S\u1ED1 %d sau khi \u0111\u1EA3o ng\u01B0\u1EE3c l\xE0: %d&quot;</span><span class="token punctuation">,</span> num2<span class="token punctuation">,</span> reversed<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
	K\u1EBFt qu\u1EA3:
		Nh\u1EADp v\xE0o s\u1ED1 c\u1EA7n \u0111\u1EA3o ng\u01B0\u1EE3c: 11122003
		S\u1ED1 sau khi \u0111\u1EA3o ng\u01B0\u1EE3c l\xE0: 30022111
*/</span>
</code></pre></div></details><h3 id="_7-3-tinh-can-bac-hai" tabindex="-1"><a class="header-anchor" href="#_7-3-tinh-can-bac-hai" aria-hidden="true">#</a> 7.3 T\xEDnh c\u0103n b\u1EADc hai</h3><p>Trong v\xED d\u1EE5 n\xE0y ch\xFAng ta s\u1EBD t\u1EA1o m\u1ED9t ph\u01B0\u01A1ng th\u1EE9c l\xE0 CanBacHai() \u0111\u1EC3 t\xEDnh c\u0103n b\u1EADc hai, sau \u0111\xF3 g\u1ECDi n\xF3 ra \u1EDF ph\u01B0\u01A1ng th\u1EE9c main() \u0111\u1EC3 th\u1EF1c hi\u1EC7n c\xF4ng vi\u1EC7c t\xEDnh c\u0103n c\u1EE7a s\u1ED1 \u0111\u01B0\u1EE3c nh\u1EADp v\xE0o t\u1EEB ng\u01B0\u1EDDi d\xF9ng.</p><details class="custom-container details"><summary>B\xE0i gi\u1EA3i</summary><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">CanBacHai</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">squareRoot</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> temp<span class="token punctuation">;</span>
 
        <span class="token keyword">double</span> sr <span class="token operator">=</span> number <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
 
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            temp <span class="token operator">=</span> sr<span class="token punctuation">;</span>
            sr <span class="token operator">=</span> <span class="token punctuation">(</span>temp <span class="token operator">+</span> <span class="token punctuation">(</span>number <span class="token operator">/</span> temp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp <span class="token operator">-</span> sr<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token keyword">return</span> sr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Nh\u1EADp v\xE0o s\u1ED1 num: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;C\u0103n b\u1EADc hai c\u1EE7a &quot;</span><span class="token operator">+</span> num<span class="token operator">+</span> <span class="token string">&quot; l\xE0: &quot;</span><span class="token operator">+</span><span class="token function">squareRoot</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
	K\u1EBFt qu\u1EA3:
		Nh\u1EADp v\xE0o s\u1ED1 num: 3
		C\u0103n b\u1EADc hai c\u1EE7a 3 l\xE0: 1.73205
*/</span>
</code></pre></div></details>`,61),c=[o];function e(l,u){return s(),a("div",null,c)}var k=n(p,[["render",e],["__file","index.html.vue"]]);export{k as default};
